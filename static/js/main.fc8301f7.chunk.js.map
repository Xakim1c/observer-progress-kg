{"version":3,"sources":["logo.svg","components/RegionsMap.js","components/RadialSeparators.js","components/CircleProgressBar.js","App.js","reportWebVitals.js","index.js"],"names":["districts","getColor","district","data","percent","Number","toFixed","interpolateBlues","generateDistrictInfo","registered","MapChart","scaleSequential","domain","interpolator","interpolate","props","console","log","Object","keys","length","data-tip","projection","width","height","projectionConfig","center","scale","geography","geographies","map","geo","stroke","onMouseEnter","properties","ADM1_RU","Shape_Area","setTooltipContent","onClick","onDistrictClick","onMouseLeave","style","default","fill","outline","hover","pressed","rsmKey","coordinates","textAnchor","fontWeight","fontSize","strokeWidth","strokeLinecap","strokeLinejoin","transform","cx","cy","r","d","y","fontFamily","memo","Separator","position","turns","RadialSeparators","count","_","range","index","CircleProgressBar","value","text","styles","buildStyles","background","App","handleContentTooltip","content","handeOnDistrictClick","geoData","state","Tabletop","init","key","simpleSheet","then","setState","catch","err","warn","this","shortage","necessary","className","Grid","container","justify","padding","color","React","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.fc8301f7.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.103b5fa1.svg\";","import React, { memo } from \"react\";\nimport {\n  ZoomableGroup,\n  ComposableMap,\n  Geographies,\n  Geography,\n  Marker\n} from \"react-simple-maps\";\n\nimport {interpolateBlues, scaleSequential, interpolate} from \"d3\";\n\nconst districts = {\n  'Таласская': \"Таласская\",\n  'г.Ош' : 'Ош',\n  'Ошская' : 'Ошская',\n  'Нарынская' : 'Нарынская',\n  'Джалал-Абадская' : 'ДжалалАбадская',\n  'Иссык-Кульская' : 'ИКульская',\n  'Чуйская' : 'Чуйская', \n  'г.Бишкек' : 'Бишкек',\n  'Баткенская' :  'Баткенская'\n}\n\nconst geoUrl =\n  //\"https://raw.githubusercontent.com/zcreativelabs/react-simple-maps/master/topojson-maps/world-110m.json\";\n  \"https://raw.githubusercontent.com/Xakim1c/parliament-calculator-v2/main/src/data/kg_regions_topo.json\"\n\nconst getDistrictColor = (district) => {\n  if(district == 'г.Бишкек' || district == 'г.Ош'){\n    return '#1B4F72'\n  }else{\n    return '#27AE60'\n  }\n}\n\nconst getColor = (district, data) => { \n  let registered = Number(data[districts[district]])\n  let necessary = Number(data[districts[district] + '_All'])\n  let percent = (registered/necessary*100).toFixed(0)\n\n  if(percent >= 100){\n    return '#48C9B0'\n  } \n\n  if(percent > 80){\n    percent = 80\n  }\n\n  let color = interpolateBlues(percent/100)\n\n  return color\n}\n\nconst generateDistrictInfo = (district, data) => { \n  let registered = data[district]\n  let necessary = data[district + '_All'] \n  return necessary + ' ичинен ' + registered\n}\n\n\nconst colorScale = scaleSequential().domain([0,100]).interpolator(interpolate(\"white\", \"blue\"));\n\nconst MapChart = (props) => {\n\n  console.log('MAP CHART')\n  console.log(props)\n  let Bishkek = 0\n  let Osh = 0\n  let ChuyDist = 0\n  let TalasDist = 0\n  let NarynDist = 0\n  let DjalalAbadDist = 0\n  let OshDist = 0\n  let BatkenDist = 0\n  let IKDist = 0\n\n  if(Object.keys(props.data).length !== 0 ){\n    Bishkek = props.data['Бишкек']\n    Osh = props.data['Ош']\n    ChuyDist = props.data['Чуйская']\n    TalasDist = props.data['Таласская']\n    NarynDist = props.data['Нарынская']\n    DjalalAbadDist = props.data['ДжалалАбадская']\n    OshDist = props.data['Ошская']\n    BatkenDist = props.data['Баткенская']\n    IKDist = props.data['ИКульская']\n  }\n  \n  return (\n    \n      <ComposableMap data-tip=\"\" projection=\"geoEqualEarth\"  width={1000} height={500} projectionConfig={{center: [74.5,41.2],\n        scale: 6000}}>\n        {/* <ZoomableGroup center={[74.5,41.2]} minZoom={1} maxZoom={1}  zoom={1}>   */}\n        {/* onMoveStart={handleMoveStart} onMoveEnd={handleMoveEnd}> */}\n          <Geographies geography={geoUrl}>\n            {({ geographies }) =>\n              geographies.map(geo => (\n                <Geography\n                  key={geo.rsmKey}\n                  stroke=\"#A9CCE3\"\n                  geography={geo}\n                  onMouseEnter={() => {\n                    console.log(geo)\n                    const { ADM1_RU, Shape_Area } = geo.properties;\n                    //setTooltipContent(`${ADM1_RU} — ${rounded(Shape_Area)}` + ': TEST');\n                    props.setTooltipContent(`${ADM1_RU}`);\n                  }}\n                  onClick={() => {\n                    props.onDistrictClick(geo.properties)\n                  }}\n                  onMouseLeave={() => {\n                    props.setTooltipContent(\"\");\n                  }}\n                  style={{\n                    default: {\n                      // fill: getDistrictColor(geo.properties.ADM1_RU),\n                      fill: getColor(geo.properties.ADM1_RU, props.data),\n                      outline: \"none\"\n                    },\n                    hover: {\n                      fill: \"#5DADE2\",\n                      outline: \"none\"\n                    },\n                    pressed: {\n                      fill: \"#5499C7\",\n                      outline: \"none\"\n                    }\n                  }}\n                />\n              ))\n            }\n          </Geographies>\n\n          <Marker coordinates={[75.71,41.30]} fill=\"#777\">\n            <text textAnchor=\"middle\" fill=\"#212F3D\" fontWeight='bold' fontSize='20'>\n              {generateDistrictInfo('Нарынская', props.data)}\n            </text>\n          </Marker>\n\n          <Marker coordinates={[75.75,41.55]} fill=\"#777\">\n            <text textAnchor=\"middle\" fill=\"#212F3D\" fontWeight='bold' fontSize='16'>\n              Нарын облусу\n            </text>\n          </Marker>\n\n          <Marker coordinates={[78.00,42.15]} fill=\"#777\">\n            <text textAnchor=\"middle\" fill=\"#212F3D\" fontWeight='bold' fontSize='20'>\n              {generateDistrictInfo('ИКульская', props.data)}\n            </text>\n          </Marker>\n\n          <Marker coordinates={[78.00,42.35]} fill=\"#777\">\n            <text textAnchor=\"middle\" fill=\"#212F3D\" fontWeight='bold' fontSize='16'>\n              Ысык-Көл облусу\n            </text>\n          </Marker>\n\n          <Marker coordinates={[74.5, 42.50]} fill=\"#777\">\n            <text textAnchor=\"middle\" fill=\"#212F3D\" fontWeight='bold' fontSize='20'>\n              {generateDistrictInfo('Чуйская', props.data)}\n            </text>\n          </Marker>\n\n          <Marker coordinates={[74.5, 42.70]} fill=\"#777\">\n            <text textAnchor=\"middle\" fill=\"#212F3D\" fontWeight='bold' fontSize='14'>\n              Чүй облусу\n            </text>\n          </Marker>\n\n          <Marker coordinates={[75.75, 43.15]} fill=\"#777\">\n            <text textAnchor=\"middle\" fill=\"#212F3D\" fontWeight='bold' fontSize='15'>\n              Бишкек ({generateDistrictInfo('Бишкек', props.data)})\n            </text>\n          </Marker>\n\n          <Marker coordinates={[72.2, 42.30]} fill=\"#777\">\n            <text textAnchor=\"middle\" fill=\"#212F3D\" fontWeight='bold' fontSize='20'>\n              {generateDistrictInfo('Таласская', props.data)}\n            </text>\n          </Marker>\n\n          <Marker coordinates={[71.95, 42.50]} fill=\"#777\">\n            <text textAnchor=\"middle\" fill=\"#212F3D\" fontWeight='bold' fontSize='14'>\n              Талас облусу\n            </text>\n          </Marker>\n\n          <Marker coordinates={[72.65, 41.45]} fill=\"#777\">\n            <text textAnchor=\"middle\" fill=\"#212F3D\" fontWeight='bold' fontSize='20'>\n              {generateDistrictInfo('ДжалалАбадская', props.data)}\n            </text>\n          </Marker>\n\n          <Marker coordinates={[72.25, 41.70]} fill=\"#777\">\n            <text textAnchor=\"middle\" fill=\"#212F3D\" fontWeight='bold' fontSize='16'>\n              Жалал-Абад облусу\n            </text>\n          </Marker>\n\n          <Marker coordinates={[73.3, 40.10]} fill=\"#777\">\n            <text textAnchor=\"middle\" fill=\"#212F3D\" fontWeight='bold' fontSize='20'>\n              {generateDistrictInfo('Ошская', props.data)}\n            </text>\n          </Marker>\n\n          <Marker coordinates={[73.4, 40.30]} fill=\"#777\">\n            <text textAnchor=\"middle\" fill=\"#212F3D\" fontWeight='bold' fontSize='16'>\n              Ош облусу\n            </text>\n          </Marker>\n\n          <Marker coordinates={[73.45, 40.80]} fill=\"#777\">\n            <text textAnchor=\"middle\" fill=\"#212F3D\" fontWeight='bold' fontSize='15'>\n              Ош ({generateDistrictInfo('Ош', props.data)})\n            </text>\n          </Marker>\n\n          <Marker coordinates={[70.75, 39.65]} fill=\"#777\">\n            <text textAnchor=\"middle\" fill=\"#212F3D\" fontWeight='bold' fontSize='20'>\n              {generateDistrictInfo('Баткенская', props.data)}\n            </text>\n          </Marker>\n\n          <Marker coordinates={[70.75, 39.85]} fill=\"#777\">\n            <text textAnchor=\"middle\" fill=\"#212F3D\" fontWeight='bold' fontSize='16'>\n              Баткен облусу\n            </text>\n          </Marker>\n\n          <Marker coordinates={[74.60,42.85]}>\n            <g\n              fill=\"none\"\n              stroke=\"#FF5533\"\n              strokeWidth=\"2\"\n              strokeLinecap=\"round\"\n              strokeLinejoin=\"round\"\n              transform=\"translate(-12, -24)\"\n            >\n              <circle cx=\"12\" cy=\"10\" r=\"3\" />\n              <path d=\"M12 21.7C17.3 17 20 13 20 10a8 8 0 1 0-16 0c0 3 2.7 6.9 8 11.7z\" />\n            </g>\n            <text\n              textAnchor=\"middle\"\n              y={15}\n              style={{ fontFamily: \"system-ui\", fill: \"#5D5A6D\" }}\n            >\n            </text>\n          </Marker>\n\n          <Marker coordinates={[72.80, 40.55]}>\n            <g\n              fill=\"none\"\n              stroke=\"#FF5533\"\n              strokeWidth=\"2\"\n              strokeLinecap=\"round\"\n              strokeLinejoin=\"round\"\n              transform=\"translate(-12, -24)\"\n            >\n              <circle cx=\"12\" cy=\"10\" r=\"3\" />\n              <path d=\"M12 21.7C17.3 17 20 13 20 10a8 8 0 1 0-16 0c0 3 2.7 6.9 8 11.7z\" />\n            </g>\n            <text\n              textAnchor=\"middle\"\n              y={15}\n              style={{ fontFamily: \"system-ui\", fill: \"#5D5A6D\" }}\n            >\n            </text>\n          </Marker>\n\n        {/* </ZoomableGroup> */}\n      </ComposableMap>\n  );\n};\n\nexport default memo(MapChart);\n","import React from \"react\";\nimport _ from \"lodash\";\n\nfunction Separator(props) {\n  return (\n    <div\n      style={{\n        position: \"absolute\",\n        height: \"100%\",\n        transform: `rotate(${props.turns}turn)`\n      }}\n    >\n      <div style={props.style} />\n    </div>\n  );\n}\n\nfunction RadialSeparators(props) {\n  const turns = 1 / props.count;\n  return _.range(props.count).map(index => (\n    <Separator turns={index * turns} style={props.style} />\n  ));\n}\n\nexport default RadialSeparators;\n","import React from 'react';\n\n// Import react-circular-progressbar module and styles\nimport {\n  CircularProgressbar,\n  CircularProgressbarWithChildren,\n  buildStyles\n} from \"react-circular-progressbar\";\nimport \"react-circular-progressbar/dist/styles.css\";\n\n// Radial separators\nimport RadialSeparators from \"./RadialSeparators\";\n\nexport default function CircleProgressBar(props) {\n\n  return (\n    <CircularProgressbarWithChildren\n        value={props.percent}\n        text={`${props.percent}%`}\n        strokeWidth={10}\n        styles={buildStyles({\n          strokeLinecap: \"butt\"\n        })}\n      >\n        <RadialSeparators\n          count={12}\n          style={{\n            background: \"#fff\",\n            width: \"2px\",\n            // This needs to be equal to props.strokeWidth\n            height: `${10}%`\n          }}\n        />\n      </CircularProgressbarWithChildren>\n  );\n}\n\n","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\n\nimport { Grid, Typography } from '@material-ui/core';\n\nimport Map from './components/RegionsMap'\nimport CircleProgressBar from './components/CircleProgressBar'\n\nimport Tabletop from \"tabletop\";\n\nclass App extends React.Component {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {data: {}};\n  }    \n\n  componentDidMount() {\n    Tabletop.init({\n      key: 'https://docs.google.com/spreadsheets/d/1mpsk4sFCmNi96xuSNT0FsazpAx15tgSM3hqEB4kvVQk/edit?usp=sharing',\n      simpleSheet: true\n    })\n      .then((data) => {\n        this.setState( {data: data[0]} )\n      })\n      .catch((err) => console.warn(err));\n  }\n\n  handleContentTooltip = (content) => {\n    // this.setState({content: content})\n    console.log(content)\n  }\n  \n  handeOnDistrictClick = (geoData) => {\n    console.log(geoData)\n    // let tooltipDataBase = this.resultsDataDisctrictsBase[geoData.ADM1_RU] \n    // let tooltipData = this.resultsDataDisctricts[geoData.ADM1_RU] \n  \n    // console.log('STATE handeOnDistrictClick')\n    // console.log(geoData.ADM1_RU)\n    \n    // this.setState({dataForChartDifference: {'district': matchDistrictShow(matchDistrict(geoData.ADM1_RU)), \n    //                                         'base': tooltipDataBase, \n    //                                         'diff': tooltipData}})\n  }\n\n\t\n  render () {\n\n    console.log('RENDER APP')\n    console.log(this.state.data)\n\n    let shortage = 0\n    let registered = 0\n    let necessary = 0 \n    let percent = 0\n    if(Object.keys(this.state.data).length !== 0 ){\n      registered = Number(this.state.data['Зарегистрировалось'])\n      necessary = Number(this.state.data['Всего необходимо'])\n      shortage = necessary - registered\n\n      percent = (registered/necessary*100).toFixed(0)\n    }\n    \n\n    return (\n      <div className=\"App\">        \n\n      <Grid container justify=\"center\">\n          <div style={{width: 300, height: '100%', padding: '20px'}}>\n            <h3 style={{color: '#212F3D'}}>\n            Бизге {necessary} байкоочунун ичинен <span style={{color: '#CB4335', fontSize: 22}}>{registered} </span> кошулду\n            </h3> \n            <CircleProgressBar percent={percent}></CircleProgressBar>        \n          </div>\n\n          <div style={{width: 1000, height: '100%'}}>\n              <h3 style={{color: '#212F3D'}}>Таза шайлоо үчүн дагы канча <span style={{color: '#212F3D', fontSize: 28}}> адам </span> керек: <span style={{color: '#CB4335', fontSize: 25}}>{shortage} </span></h3> \n              \n              <h4 style={{color: '#212F3D'}}>(«Клооптун» байкоочуларынын саны, аймактар боюнча)</h4> \n              <Map \n                setTooltipContent={this.handleContentTooltip} \n                onDistrictClick={this.handeOnDistrictClick} \n                data = {this.state.data}\n              />        \n          </div>                                               \n      </Grid>\n\t\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}